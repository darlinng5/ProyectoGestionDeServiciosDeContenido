@model SmartAdminMvc.Models.servicioSolicitudSAModelo





    @using (Html.BeginForm("solicitudServicioSA", "inicio", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <h6>Todos los campos marcados con <strong>*</strong> son obligatorios</h6>
    <div class="form-group">
        @Html.Label("*Nombre:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.nombreCliente, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.nombreCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Apellido:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.apellidoCliente, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.apellidoCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("*Identidad:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.identidad, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.identidad, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("*Telefono:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.telefonoCliente, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.telefonoCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("*Direccion:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.direccionCliente, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.direccionCliente, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Observacion:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.observacion, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("*Fecha ", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.fechaServicio, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.fechaServicio, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("*Cantidad Horas:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.horas, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
            @Html.ValidationMessageFor(model => model.horas, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("*Tipo Servicio:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.servicioTipo != null)
            {
                @Html.DropDownListFor(x => x.idServicioTipo, (SelectList)ViewBag.servicioTipo, "Seleccione el tipo de servicio", htmlAttributes: new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.idServicioTipo, "", new { @class = "text-danger" })
            }

        </div>
    </div>
    <div class="form-group">
        @Html.Label("*Hora Inicio:", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @if (ViewBag.servicioHoras != null)
            {
                @Html.DropDownListFor(x => x.horaInicio, (SelectList)ViewBag.servicioHoras, "Seleccione una hora de inicio", htmlAttributes: new { @class = "form-control", @required = "required" })
                @Html.ValidationMessageFor(model => model.horaInicio, "", new { @class = "text-danger" })

            }

        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
           <h6>Al hacer click en guardar significa que aceptas <a href="~/inicio/contratoVistaPrevia" target="_blank"> <strong> LOS TERMINOS Y CONDICIONES</strong> </a>de nuestro contrato</h6>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Guardar" class="btn btn-success" />
        </div>
    </div>
</div>
    }


